// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OPPI.Data;

namespace OPPI.Data.Migrations
{
    [DbContext(typeof(OppiContext))]
    [Migration("20211028042058_Migration_Campanha_Anuncio")]
    partial class Migration_Campanha_Anuncio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OPPI.Dominio.Entidades.Anuncio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Anuncio");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.AnuncioFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AnuncioId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FotoId")
                        .HasColumnType("integer");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("FotoId");

                    b.ToTable("AnuncioFoto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Avaliacao")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Encerrado")
                        .HasColumnType("boolean");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Atendimento");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("LojaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Mostrar")
                        .HasColumnType("boolean");

                    b.Property<int>("Nota")
                        .HasColumnType("integer");

                    b.Property<int>("Preco")
                        .HasColumnType("integer");

                    b.Property<string>("Resposta")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Campanha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Campanha");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.CampanhaFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CampanhaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FotoId")
                        .HasColumnType("integer");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.HasIndex("FotoId");

                    b.ToTable("CampanhaFoto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Padrao")
                        .HasColumnType("boolean");

                    b.Property<int>("TipoEndereco")
                        .HasColumnType("integer");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Base64")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Foto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Loja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Resumo")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("TipoFornecedor")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaCampanha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CampanhaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.HasIndex("LojaId");

                    b.ToTable("LojaCampanha");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FotoId")
                        .HasColumnType("integer");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<string>("Posicao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FotoId");

                    b.HasIndex("LojaId");

                    b.ToTable("LojaFoto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaPlanoPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicioVigencia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanoPrecoId")
                        .HasColumnType("integer");

                    b.Property<bool>("RenovacaoAutomatica")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("PlanoPrecoId");

                    b.ToTable("LojaPlanoPreco");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AtendimentoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AtendimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagem");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Navegacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Avaliacao")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Preciacao")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeAcesso")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Navegacao");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Plano", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Anuncio")
                        .HasColumnType("boolean");

                    b.Property<bool>("AtendimentoVIP")
                        .HasColumnType("boolean");

                    b.Property<bool>("Campanha")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Comissao")
                        .HasColumnType("numeric");

                    b.Property<bool>("CupomDesconto")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<bool>("EmailMarketing")
                        .HasColumnType("boolean");

                    b.Property<bool>("EmailPersonalizado")
                        .HasColumnType("boolean");

                    b.Property<bool>("FormasEntrega")
                        .HasColumnType("boolean");

                    b.Property<bool>("GoogleShopping")
                        .HasColumnType("boolean");

                    b.Property<bool>("InteligenciaMercado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("PagSeguro")
                        .HasColumnType("boolean");

                    b.Property<bool>("PaginaPersonalizada")
                        .HasColumnType("boolean");

                    b.Property<int>("PeriodoGratuito")
                        .HasColumnType("integer");

                    b.Property<bool>("Promocao")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<decimal>("TaxaFrete")
                        .HasColumnType("numeric");

                    b.Property<int>("TipoPlano")
                        .HasColumnType("integer");

                    b.Property<bool>("ValeCompra")
                        .HasColumnType("boolean");

                    b.Property<decimal>("ValorFreteGratis")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Plano");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.PlanoPreco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("PlanoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PlanoId");

                    b.ToTable("PlanoPreco");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<bool>("Destaque")
                        .HasColumnType("boolean");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Resumo")
                        .HasColumnType("varchar(300)");

                    b.Property<int>("SegmentoId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoProduto")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("SegmentoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.ProdutoFoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FotoId")
                        .HasColumnType("integer");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<string>("Posicao")
                        .HasColumnType("text");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FotoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoFoto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.ProdutoPromocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("PromocaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("PromocaoId");

                    b.ToTable("ProdutoPromocao");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataFinal")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Desconto")
                        .HasColumnType("numeric");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<int>("LojaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.ToTable("Promocao");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Provedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Provedor");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Segmento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Segmento");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DDD")
                        .HasColumnType("integer");

                    b.Property<int>("DDI")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("LojaId")
                        .HasColumnType("integer");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ProvedorId")
                        .HasColumnType("integer");

                    b.Property<string>("Ramal")
                        .HasColumnType("text");

                    b.Property<int>("TipoTelefone")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LojaId");

                    b.HasIndex("ProvedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAceitePolitica")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DataAceiteTermos")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UltimoAcesso")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.UsuarioProvedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProvedorId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProvedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioProvedor");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Anuncio", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("Anuncios")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.AnuncioFoto", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Anuncio", "Anuncio")
                        .WithMany("AnuncioFotos")
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Foto", "Foto")
                        .WithMany("AnuncioFotos")
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Foto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Atendimento", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("Atendimentos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Avaliacao", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("LojaId");

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Campanha", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.CampanhaFoto", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Campanha", "Campanha")
                        .WithMany("CampanhaFotos")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Foto", "Foto")
                        .WithMany("CampanhaFotos")
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Foto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Documento", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Documentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Loja", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Lojas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaCampanha", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Campanha", "Campanha")
                        .WithMany("LojaCampanhas")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("LojaCampanhas")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaFoto", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Foto", "Foto")
                        .WithMany("LojaFotos")
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("LojaFotos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foto");

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.LojaPlanoPreco", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("LojaPlanoPrecos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.PlanoPreco", "PlanoPreco")
                        .WithMany("LojaPlanoPrecos")
                        .HasForeignKey("PlanoPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("PlanoPreco");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Mensagem", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Atendimento", null)
                        .WithMany("Mensagens")
                        .HasForeignKey("AtendimentoId");

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Navegacao", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Produto", "Produto")
                        .WithMany("Navegacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.PlanoPreco", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Plano", "Plano")
                        .WithMany("Precos")
                        .HasForeignKey("PlanoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plano");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("Produtos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Segmento", "Segmento")
                        .WithMany()
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");

                    b.Navigation("Segmento");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.ProdutoFoto", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Foto", "Foto")
                        .WithMany("ProdutoFotos")
                        .HasForeignKey("FotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Produto", "Produto")
                        .WithMany("ProdutoFotos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foto");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.ProdutoPromocao", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Produto", "Produto")
                        .WithMany("ProdutoPromocoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Promocao", "Promocao")
                        .WithMany("ProdutoPromocoes")
                        .HasForeignKey("PromocaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Promocao", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany()
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Provedor", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Segmento", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Segmentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Telefone", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Loja", "Loja")
                        .WithMany("Telefones")
                        .HasForeignKey("LojaId");

                    b.HasOne("OPPI.Dominio.Entidades.Provedor", "Provedor")
                        .WithMany("Telefones")
                        .HasForeignKey("ProvedorId");

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("Telefones")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Loja");

                    b.Navigation("Provedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.UsuarioProvedor", b =>
                {
                    b.HasOne("OPPI.Dominio.Entidades.Provedor", "Provedor")
                        .WithMany("UsuarioProvedores")
                        .HasForeignKey("ProvedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OPPI.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("UsuarioProvedores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Anuncio", b =>
                {
                    b.Navigation("AnuncioFotos");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Atendimento", b =>
                {
                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Campanha", b =>
                {
                    b.Navigation("CampanhaFotos");

                    b.Navigation("LojaCampanhas");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Segmentos");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Foto", b =>
                {
                    b.Navigation("AnuncioFotos");

                    b.Navigation("CampanhaFotos");

                    b.Navigation("LojaFotos");

                    b.Navigation("ProdutoFotos");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Loja", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Atendimentos");

                    b.Navigation("Avaliacoes");

                    b.Navigation("LojaCampanhas");

                    b.Navigation("LojaFotos");

                    b.Navigation("LojaPlanoPrecos");

                    b.Navigation("Produtos");

                    b.Navigation("Telefones");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Plano", b =>
                {
                    b.Navigation("Precos");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.PlanoPreco", b =>
                {
                    b.Navigation("LojaPlanoPrecos");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Produto", b =>
                {
                    b.Navigation("Navegacoes");

                    b.Navigation("ProdutoFotos");

                    b.Navigation("ProdutoPromocoes");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Promocao", b =>
                {
                    b.Navigation("ProdutoPromocoes");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Provedor", b =>
                {
                    b.Navigation("Telefones");

                    b.Navigation("UsuarioProvedores");
                });

            modelBuilder.Entity("OPPI.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Enderecos");

                    b.Navigation("Lojas");

                    b.Navigation("Telefones");

                    b.Navigation("UsuarioProvedores");
                });
#pragma warning restore 612, 618
        }
    }
}
